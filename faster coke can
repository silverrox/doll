#include <Adafruit_NeoPixel.h>
#include <SoftwareSerial.h>
#include <DFRobotDFPlayerMini.h>
#include <Servo.h>  // Include the servo library

// Define LED strips
#define LED_PIN_3 3
#define LED_PIN_5 5
#define LED_PIN_6 6

#define NUM_LEDS_3 1
#define NUM_LEDS_5 1
#define NUM_LEDS_6 14

// Define button, DFPlayer, turntable, and servo pins
#define BUTTON_PIN 2
#define DFPLAYER_RX 10
#define DFPLAYER_TX 11
#define TURNTABLE_PIN 9  // MOSFET control pin
#define SERVO1_PIN 7     // First servo (FT90R, continuous rotation)
#define SERVO2_PIN 8     // Second servo (dancing servo)

// **Turntable Duration (adjust after measuring full rotation)**
#define TURNTABLE_ROTATION_TIME 15500 // Adjust this after testing

// Servo setup
Servo ft90rServo; // First servo (continuous rotation)
Servo myServo2;   // Second servo (dancing)
int servoSpeed = 120; // **30% speed** (90 = stop, 180 = full speed, lower = slower)
bool dancing = false; // Track if the second servo is dancing

// Create NeoPixel objects
Adafruit_NeoPixel strip3 = Adafruit_NeoPixel(NUM_LEDS_3, LED_PIN_3, NEO_GRB + NEO_KHZ800);
Adafruit_NeoPixel strip5 = Adafruit_NeoPixel(NUM_LEDS_5, LED_PIN_5, NEO_GRB + NEO_KHZ800);
Adafruit_NeoPixel strip6 = Adafruit_NeoPixel(NUM_LEDS_6, LED_PIN_6, NEO_GRB + NEO_KHZ800);

// DFPlayer setup
SoftwareSerial mySerial(DFPLAYER_RX, DFPLAYER_TX);
DFRobotDFPlayerMini myDFPlayer;

bool isPlaying = false;
bool turntableActive = false;
bool discoMode = false;
bool servoActive = false;

unsigned long songStartTime = 0;
unsigned long turntableStartTime = 0;

void setup() {
    Serial.begin(9600);

    // Initialize NeoPixels
    strip3.begin();
    strip5.begin();
    strip6.begin();
    strip3.show();
    strip5.show();
    strip6.show();

    setLEDColors(); // Set LEDs to default colors

    // Set up button, turntable, and servos
    pinMode(BUTTON_PIN, INPUT_PULLUP);
    pinMode(TURNTABLE_PIN, OUTPUT);
    digitalWrite(TURNTABLE_PIN, LOW); // Turntable off initially

    ft90rServo.attach(SERVO1_PIN);
    ft90rServo.write(90); // Ensure first servo is stopped initially

    myServo2.attach(SERVO2_PIN);
    myServo2.write(90); // Start second servo in the center

    // Initialize DFPlayer
    mySerial.begin(9600);
    if (!myDFPlayer.begin(mySerial)) {
        Serial.println("❌ DFPlayer Mini NOT detected!");
        while (true); // Halt if DFPlayer is not found
    }

    myDFPlayer.volume(25); // Set volume (0-30)
    Serial.println("✅ DFPlayer Mini Ready.");
}

void loop() {
    int buttonState = digitalRead(BUTTON_PIN);

    // **Button Press - Only works when not already playing**
    if (buttonState == LOW && !isPlaying) { 
        delay(50); // Simple debounce
        Serial.println("🎵 Button Pressed - Playing Song...");
        myDFPlayer.play(1); // Play 001.mp3
        isPlaying = true;
        songStartTime = millis(); // Record the time the song starts
        Serial.print("⏱️ Song started at: "); Serial.println(songStartTime);
    }

    // **Start Turntable & Both Servos 13s after song starts**
    if (isPlaying && millis() - songStartTime >= 13000 && !turntableActive) {
        Serial.println("🔄 Turntable & Servos Started!");
        digitalWrite(TURNTABLE_PIN, HIGH); // Turn on turntable
        ft90rServo.write(servoSpeed); // **Run first servo at 30% speed**
        dancing = true; // Start dancing motion
        discoMode = true; // Start the flashy party lights
        turntableActive = true;
        servoActive = true;
        turntableStartTime = millis(); // Record turntable start time
    }

    // **Run flashy party lights if turntable is spinning**
    if (discoMode) {
        randomDiscoLights();
    }

    // **Move Second Servo (Dancing) While Turntable is Spinning**
    if (dancing) {
        static unsigned long lastDanceMove = 0;
        if (millis() - lastDanceMove > 300) { // Change position every 300ms
            static bool tiltLeft = false;
            myServo2.write(tiltLeft ? 40 : 140); // Tilt left and right
            tiltLeft = !tiltLeft;
            lastDanceMove = millis();
        }
    }

    // **Stop Turntable & Both Servos after one full rotation**
    if (turntableActive && millis() - turntableStartTime >= TURNTABLE_ROTATION_TIME) {
        Serial.println("🛑 Turntable & Servos Stopped.");
        digitalWrite(TURNTABLE_PIN, LOW);
        ft90rServo.write(90); // **Stop first servo**
        myServo2.write(90); // **Reset second servo to center**
        dancing = false; // Stop dancing motion
        discoMode = false; // Stop party lights
        setLEDColors(); // Restore original colors
        turntableActive = false;
        servoActive = false;
    }

    // **Reset system when song ends (but doesn't stop turntable)**
    if (isPlaying && millis() - songStartTime >= 28000) { // Keeping reference to song length
        Serial.println("✅ Song Finished (turntable & servos still spinning).");
        isPlaying = false; // Allow button to be pressed again
    }
}

// Function to set static LED colors (default state)
void setLEDColors() {
    strip3.setPixelColor(0, strip3.Color(0, 0, 255)); // Blue
    strip5.setPixelColor(0, strip5.Color(255, 20, 147)); // Pink

    for (int i = 0; i < NUM_LEDS_6; i++) {
        strip6.setPixelColor(i, strip6.Color(255, 100, 20)); // Very warm white
    }

    strip3.show();
    strip5.show();
    strip6.show();
}

// Function for **randomized** disco lights
void randomDiscoLights() {
    static uint32_t lastUpdate = 0;
    if (millis() - lastUpdate < 100) return; // Only update every 100ms
    lastUpdate = millis();

    uint32_t rainbowColors[] = {
        strip3.Color(255, 0, 0),    // Red
        strip3.Color(255, 127, 0),  // Orange
        strip3.Color(255, 255, 0),  // Yellow
        strip3.Color(0, 255, 0),    // Green
        strip3.Color(0, 0, 255),    // Blue
        strip3.Color(75, 0, 130),   // Indigo
        strip3.Color(148, 0, 211)   // Violet
    };

    for (int i = 0; i < NUM_LEDS_3; i++) {
        strip3.setPixelColor(i, rainbowColors[random(0, 7)]);
    }
    for (int i = 0; i < NUM_LEDS_5; i++) {
        strip5.setPixelColor(i, rainbowColors[random(0, 7)]);
    }
    for (int i = 0; i < NUM_LEDS_6; i++) {
        strip6.setPixelColor(i, rainbowColors[random(0, 7)]);
    }

    strip3.show();
    strip5.show();
    strip6.show();
}
